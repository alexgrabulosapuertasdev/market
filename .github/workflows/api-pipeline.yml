name: PipelineApi

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: '20'
      - name: Install dependencies
        run: cd ./packages/api && npm install
      - name: Build
        run: cd ./packages/api && npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: '20'
      - name: Install dependencies
        run: cd ./packages/api && npm install
      - name: Test
        run: cd ./packages/api && npm run test

  test-e2e:
    needs: [build]
    runs-on: ubuntu-20.04
    services:
      user-mariadb:
        image: mariadb:10.6
        env:
          MARIADB_ROOT_PASSWORD: ${{ secrets.USER_MARIADB_PASSWORD_TEST }}
          MARIADB_DATABASE: ${{ secrets.USER_MARIADB_NAME_TEST }}
          MARIADB_USER: ${{ secrets.USER_MARIADB_USERNAME_TEST }}
          MARIADB_PASSWORD: ${{ secrets.USER_MARIADB_PASSWORD_TEST }}
        ports:
          - 3306:3306
      product-mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.PRODUCT_MONGODB_USERNAME_TEST }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.PRODUCT_MONGODB_PASSWORD_TEST }}
          MONGO_INITDB_DATABASE: ${{ secrets.PRODUCT_MONGODB_NAME_TEST }}
        ports:
          - 27017:27017
      sale-mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.SALE_MONGODB_USERNAME_TEST }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.SALE_MONGODB_PASSWORD_TEST }}
          MONGO_INITDB_DATABASE: ${{ secrets.SALE_MONGODB_NAME_TEST }}
        ports:
          - 27018:27017
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: '7'
          redis-password: ${{ secrets.USER_REDIS_PASSWORD_TEST }}
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: '20'
      - name: create environment variables
        run: |
          cd ./packages/api
          echo "USER_MARIADB_NAME=${{ secrets.USER_MARIADB_NAME_TEST }}" >> .env.test
          echo "USER_MARIADB_PORT=3306" >> .env.test
          echo "USER_MARIADB_HOST=${{ secrets.USER_MARIADB_HOST_TEST }}" >> .env.test
          echo "USER_MARIADB_USERNAME=${{ secrets.USER_MARIADB_USERNAME_TEST }}" >> .env.test
          echo "USER_MARIADB_PASSWORD=${{ secrets.USER_MARIADB_PASSWORD_TEST }}" >> .env.test

          echo "USER_REDIS_PASSWORD=${{ secrets.USER_REDIS_PASSWORD_TEST }}" >> .env.test
          echo "USER_REDIS_HOST=${{ secrets.USER_REDIS_HOST_TEST }}" >> .env.test
          echo "USER_REDIS_PORT=6379" >> .env.test

          echo "PRODUCT_MONGODB_HOST=${{ secrets.PRODUCT_MONGODB_HOST_TEST }}" >> .env.test
          echo "PRODUCT_MONGODB_NAME=${{ secrets.PRODUCT_MONGODB_NAME_TEST }}" >> .env.test
          echo "PRODUCT_MONGODB_PORT=27017" >> .env.test
          echo "PRODUCT_MONGODB_USERNAME=${{ secrets.PRODUCT_MONGODB_USERNAME_TEST }}" >> .env.test
          echo "PRODUCT_MONGODB_PASSWORD=${{ secrets.PRODUCT_MONGODB_PASSWORD_TEST }}" >> .env.test

          echo "SALE_MONGODB_HOST=${{ secrets.SALE_MONGODB_HOST_TEST }}" >> .env.test
          echo "SALE_MONGODB_NAME=${{ secrets.SALE_MONGODB_NAME_TEST }}" >> .env.test
          echo "SALE_MONGODB_PORT=27018" >> .env.test
          echo "SALE_MONGODB_USERNAME=${{ secrets.SALE_MONGODB_USERNAME_TEST }}" >> .env.test
          echo "SALE_MONGODB_PASSWORD=${{ secrets.SALE_MONGODB_PASSWORD_TEST }}" >> .env.test
      - name: Install dependencies
        run: npm install
      - name: Test e2e
        run: cd ./packages/api && npm run test:e2e -- --detectOpenHandles --forceExit
